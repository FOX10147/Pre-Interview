# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: hello_world
  jobs:
  - job: echo
    steps:
    - script: echo Hello, world!
      displayName: 'Run a one-line script'

- stage: 'Sonar_Cloud'
  jobs:
  - job: 'All_Sonar'
    steps:
    - task: SonarCloudPrepare@1
      displayName: prepare sonar
      inputs:
        SonarCloud: 'project3'
        organization: 'fox10147'
        scannerMode: 'Other'
    - task: Gradle@2
      displayName: create gradle wrapper
      inputs:
        gradleWrapperFile: 'gradlew'
        tasks: 'build'
        publishJUnitResults: true
        testResultsFiles: '**/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        sonarQubeRunAnalysis: true
        sqGradlePluginVersionChoice: 'specify'
        sonarQubeGradlePluginVersion: '2.6.1'
        checkStyleRunAnalysis: false
        findBugsRunAnalysis: false
    - task: SonarCloudAnalyze@1
      displayName: analyze with sonar (not required)
    - task: SonarCloudPublish@1
      displayName: publish report to sonar.io
      inputs:
        pollingTimeoutSec: '300'

- stage: 'Docker'
  jobs:
  - job: 'Docker_Build'
    steps:
    - script: |
        chmod +x gradlew 
        ./gradlew build
    - task: Docker@2
      displayName: 'Building image...'
      inputs:
        containerRegistry: 'docker-login'
        repository: 'fox10147/azure-spring'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: |
          $(Build.BuildId)
          latest

    - script: "sudo curl -sfL https://raw.githubusercontent.com/aquasecurity/trivy/master/contrib/install.sh | sh -s -- -b /usr/local/bin"
      displayName: "Get Trivy"

    - script: "trivy image fox10147/azure-spring:$(Build.BuildId)"
      displayName: "Scan with Trivy"
      
    - task: Docker@2
      displayName: 'pushing image to docker repository...'
      inputs:
        containerRegistry: 'docker-login'
        repository: 'fox10147/azure-spring'
        command: push
        tags: |
          $(Build.BuildId)
          latest
    - task: Kubernetes@1
      displayName: kube deploy with file
      inputs:
        connectionType: 'Kubernetes Service Connection'
        kubernetesServiceEndpoint: 'azure-kube-spring'
        namespace: 'spring'
        command: 'apply'
        useConfigurationFile: true
        Configuration: 'spring-deploy-service.yml'
        secretType: 'dockerRegistry'
        containerRegistryType: 'Container Registry'
        dockerRegistryEndpoint: 'docker-login'

- stage: echo2
  jobs:
  - job: echo3
    steps:
    - script: |
        echo Add other tasks to build, test, and deploy your project.
        echo See https://aka.ms/yaml
      displayName: 'Run a multi-line script'